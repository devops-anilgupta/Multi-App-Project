  # ----------------Command to run the application: -----------------------------#
  # docker compose up pythaon-app
  # docker compose down python-app
  
  # docker compose up mysql-db
  # docker compose down mysql-db

  # docker compose up react-app
  # docker compose down react-app

  # docker compose up angular-app
  # docker compose down angular-app

  # docker compose up go-app
  # docker compose down go-app

  # docker compose up all
  # docker compose down all
  # ----------------Command to run the application: -----------------------------#

version: '3.8'
services:
  go-app:
    build: ./go-app
    ports:
      - "8000:8000"
  
  python-app:
    container_name: backend-python
    build: ./python-app
    ports:
      - "5000:5000"
    volumes:
      - python_uploads:/data/uploads
    depends_on:
      - mysql-db
    env_file:
      - ./python-app/.env
    # environment:
    #   MYSQL_HOST: mysql-db
    #   MYSQL_USER: root
    #   MYSQL_PASSWORD: password
    #   MYSQL_DATABASE: userdb

  mysql-db:
    container_name: mysql
    build:
      context: .
      dockerfile: ./mysql-init/Dockerfile.mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: userdb
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  react-app:
      container_name: frontend-react
      build: ./react-app
      ports:
        - "3000:3000"
      environment:
        - CHOKIDAR_USEPOLLING=true
      command: npm start

  angular-app:
    build: ./angular-app
    ports:
      - "4200:80"

volumes:
    mysql-data:
    python_uploads: